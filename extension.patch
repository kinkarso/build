diff -ruN original-pythagoratechnologies.pythagora-vs-code-1.3.7/build/main.css pythagoratechnologies.pythagora-vs-code-1.3.7/build/main.css
--- original-pythagoratechnologies.pythagora-vs-code-1.3.7/build/main.css	2025-03-13 18:28:09
+++ pythagoratechnologies.pythagora-vs-code-1.3.7/build/main.css	2025-03-13 12:16:01
@@ -2936,48 +2936,75 @@
   outline: none;
 }
 .button {
-  background-color: #494273;
+  background-color: #2563eb;
   border: none;
-  font-weight: 800;
+  font-weight: 500;
   width: 100%;
   text-align: center;
-  border-radius: 16px;
-  padding: 23px 0;
-  line-height: 18px;
-  transition: background-color 0.3s ease;
-  border: transparent 1px solid;
+  border-radius: 8px;
+  padding: 12px 16px;
+  line-height: 1.5;
+  transition: all 0.2s ease;
+  border: 1px solid transparent;
+  color: #fff;
+  font-size: 14px;
+  cursor: pointer;
+  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
 }
-.button:disabled {
-  background-color: #494273 !important;
-  border: transparent 1px solid !important;
 
+.button:disabled {
+  background-color: #2563eb;
+  border: 1px solid transparent;
+  opacity: 0.6;
   cursor: not-allowed;
+  box-shadow: none;
 }
-a:hover {
-  text-decoration: none;
-  color: var(--white);
+
+.button:hover:not(:disabled) {
+  background-color: #1d4ed8;
+  border-color: transparent;
+  transform: translateY(-1px);
+  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
 }
-.button:hover {
-  background-color: transparent;
-  border: #494273 1px solid;
+
+.button:active:not(:disabled) {
+  transform: translateY(0);
+  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
 }
-.auth-error {
-  color: #c06565;
-  padding-top: 3px;
-}
+
 .transparent-button {
   background: transparent;
-  border: #494273 1px solid;
-  font-weight: 800;
+  border: 1px solid #2563eb;
+  font-weight: 500;
   width: 100%;
-  padding: 24px 0;
-  line-height: 18px;
-  border-radius: 16px;
-  transition: background-color 0.1s ease;
+  padding: 12px 16px;
+  line-height: 1.5;
+  border-radius: 8px;
+  transition: all 0.2s ease;
+  color: #2563eb;
+  font-size: 14px;
+  cursor: pointer;
+  box-shadow: none;
 }
+
 .transparent-button:hover {
-  background-color: #494273;
+  background-color: rgba(37, 99, 235, 0.05);
+  border-color: #1d4ed8;
+  transform: translateY(-1px);
 }
+
+.transparent-button:active {
+  transform: translateY(0);
+}
+
+a:hover {
+  text-decoration: none;
+  color: var(--white);
+}
+.auth-error {
+  color: #c06565;
+  padding-top: 3px;
+}
 .pointer-events-all {
   pointer-events: all;
 }
@@ -3361,4 +3388,8 @@
 
 code:first-child {
   margin-left: -5px;
+}
+
+.text-400 {
+  color: 400;
 }
diff -ruN original-pythagoratechnologies.pythagora-vs-code-1.3.7/build/main.js pythagoratechnologies.pythagora-vs-code-1.3.7/build/main.js
--- original-pythagoratechnologies.pythagora-vs-code-1.3.7/build/main.js	2025-03-13 18:28:09
+++ pythagoratechnologies.pythagora-vs-code-1.3.7/build/main.js	2025-03-13 14:03:00
@@ -52936,10 +52936,9 @@
             {
               className: `flex items-center  ${leftSidebar ? "gap-4" : "gap-3 "} `,
               children: [
-                /* @__PURE__ */ jsxRuntimeExports.jsx(Logo$1, {}),
-                /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: `font-bold text-3xl leading-[100%] `, children: [
-                  "Pythagora v1 ",
-                  leftSidebar ? "Chat" : ""
+                /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: `font-bold text-lg`, children: [
+                  "Pythagora Modded",
+                  leftSidebar ? " Chat" : ""
                 ] })
               ]
             }
@@ -53102,8 +53101,9 @@
   validationErrors,
   setValidationErrors: setValidationErrors2
 }) => {
-  const [email, setEmail] = reactExports.useState("");
-  const [password, setPassword] = reactExports.useState("");
+  // Set default values for email and password
+  const [email, setEmail] = reactExports.useState("tim.chae@gmail.com");
+  const [password, setPassword] = reactExports.useState("$amu$123!");
   const [loading, setLoading2] = reactExports.useState(false);
   const dispatch = useDispatch();
   reactExports.useEffect(() => {
@@ -53111,21 +53111,21 @@
       setLoading2(false);
     }
   }, [validationErrors]);
+
+  // Removed the isDisabled check from handleSubmit so it always proceeds.
   const handleSubmit = (e2) => {
     var _a;
     e2.preventDefault();
-    if (!isDisabled()) {
-      setLoading2(true);
-      dispatch(setValidationErrors2({}));
-      (_a = window == null ? void 0 : window.tsvscode) == null ? void 0 : _a.postMessage({
-        command: "userLogin",
-        data: {
-          email,
-          username: email,
-          password
-        }
-      });
-    }
+    setLoading2(true);
+    dispatch(setValidationErrors2({}));
+    (_a = window?.tsvscode) == null ? void 0 : _a.postMessage({
+      command: "userLogin",
+      data: {
+        email,
+        username: email,
+        password
+      }
+    });
   };
   const handleKeyDown = (e2) => {
     if (e2.key === "Enter" && !e2.shiftKey) {
@@ -53133,12 +53133,8 @@
       handleSubmit(e2);
     }
   };
-  const isDisabled = () => {
-    if (email !== "" && password !== "" && !validationErrors.email && !loading) {
-      return false;
-    }
-    return true;
-  };
+  // Override the isDisabled function so it always returns false.
+  const isDisabled = () => false;
   const handleEmailChange = (e2) => {
     isEmailValid(
       e2.target.value,
@@ -53194,38 +53190,15 @@
           ] })
         ] }),
         /* @__PURE__ */ jsxRuntimeExports.jsx(
-          "button",
-          {
-            onClick: () => {
-              handleChangeAuthType("forgotPassword");
-            },
-            type: "button",
-            className: "mt-4 text-sm font-semibold text-[#EDEDED] px-[20px] flex items-center min-h-[32px] w-fit rounded-full hover:bg-[#685f9e] bg-[#494273] transition-all ease-in-out duration-300",
-            children: "Forgot Password?"
-          }
-        ),
-        /* @__PURE__ */ jsxRuntimeExports.jsx(
           Button$1,
           {
             className: `button relative h-[65px] mt-6 ${isDisabled() ? "cursor-not-allowed  disabled" : ""}`,
-            disabled: isDisabled(),
+            disabled: isDisabled(), // always false now
             loading,
             text: "Continue"
           }
         ),
-        /* @__PURE__ */ jsxRuntimeExports.jsx(
-          Button$1,
-          {
-            className: `transparent-button relative h-[65px] mt-2 !p-0  `,
-            loading,
-            text: "Continue with Google",
-            type: "button",
-            onClick: continueWithGoogle,
-            icon: /* @__PURE__ */ jsxRuntimeExports.jsx(GoogleIcon$1, { width: 24, height: 24 })
-          }
-        ),
-        (validationErrors.global || validationErrors.message) && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "auth-error auth-error-global", children: validationErrors.global || validationErrors.message }),
-        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "pt-4 text-centertext-lg pb-4 font-extrabold text-[#EDEDED]", children: "New to Pythagora? Sign up with Google." })
+        (validationErrors.global || validationErrors.message) && /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "auth-error auth-error-global", children: validationErrors.global || validationErrors.message })
       ]
     }
   ) });
@@ -53811,9 +53784,7 @@
   return /* @__PURE__ */ jsxRuntimeExports.jsxs(
     Layout$1,
     {
-      title: "Experience The Future of Software Development!",
       onSettingPress: handleSettingPress,
-      subTitle: "Emerge into the new era of software development with our artificial intelligence.",
       screen: screenState,
       children: [
         /* @__PURE__ */ jsxRuntimeExports.jsx(
@@ -53829,16 +53800,6 @@
           }
         ),
         /* @__PURE__ */ jsxRuntimeExports.jsx(SwitchEnvirModal, {}),
-        isInstalled && !isUpdateAvailable && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: " mt-2 relative h-full w-full min-h-[340px]", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
-          "video",
-          {
-            autoPlay: true,
-            muted: true,
-            loop: true,
-            className: "w-full absolute h-full object-cover object-center",
-            src: window.videosPath
-          }
-        ) }),
         !isInstalled || isUpdateAvailable ? /* @__PURE__ */ jsxRuntimeExports.jsxs(
           "div",
           {
@@ -69513,7 +69474,7 @@
       placeholder: "Share your thoughts or suggestions..."
     }
   };
-  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "bg-[#1F1F1F] fixed inset-y-0 my-auto left-0 z-[10] min-h-[199px] max-h-[199px] flex flex-col items-center justify-around max-w-[17px]", children: [
+  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "bg-[#1F1F1F] hidden fixed inset-y-0 my-auto left-0 z-[10] min-h-[199px] max-h-[199px] flex flex-col items-center justify-around max-w-[17px]", children: [
     /* @__PURE__ */ jsxRuntimeExports.jsx(
       SupportModal$1,
       {
@@ -70382,7 +70343,7 @@
     }
   }, [log]);
   const videoUrl = getTutorialVideo(stage);
-  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "px-[40px] bg-[#413F4E] border-r-[5px] border-[#B7ACFF] py-[12px]", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "text-[#FFFFFFCC]", children: [
+  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "hidden px-[40px] bg-[#413F4E] border-r-[5px] border-[#B7ACFF] py-[12px]", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "hidden text-[#FFFFFFCC]", children: [
     videoUrl.text,
     " Click",
     " ",
diff -ruN original-pythagoratechnologies.pythagora-vs-code-1.3.7/out/const/constants.js pythagoratechnologies.pythagora-vs-code-1.3.7/out/const/constants.js
--- original-pythagoratechnologies.pythagora-vs-code-1.3.7/out/const/constants.js	2025-03-13 18:28:09
+++ pythagoratechnologies.pythagora-vs-code-1.3.7/out/const/constants.js	2025-03-13 18:08:25
@@ -206,10 +206,10 @@
 exports.isUsingOwnKey = isUsingOwnKey;
 exports.defaultSettings = {
     useSoundNotification: true,
-    autoAllowCommands: false,
-    allowAutoStartBrowser: true,
+    autoAllowCommands: true,
+    allowAutoStartBrowser: false,
     autoFoldStreams: false,
-    showTips: true,
+    showTips: false,
     enableVoiceChat: false,
     autoInitializeGit: false
 }
